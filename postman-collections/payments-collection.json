{
  "item": [
    {
      "id": "1ce7e2b1-e01b-477d-b814-979fe4545dba",
      "name": "Payments",
      "description": {
        "content": "Create, cancel, refund, and get updates on card and ACH payments.",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "34e6df61-5a01-4aa6-a3e5-fa4bac2d59a2",
          "name": "Create a payment",
          "request": {
            "name": "Create a payment",
            "description": {
              "content": "\n#### Body Params\n\n**idempotencyKey** *string* (REQUIRED)\nUniversally unique identifier (UUID v4) idempotency key. This key is utilized to ensure exactly-once execution of mutating requests.\n\n**keyId** *string*\nUniversally unique identifier (UUID v4) of the public key used in encryption. NOTE the sandbox environment uses the default value of `key1`. For this reason the example supplied is `key1` rather than a UUID.\n\n**metadata** *object* (REQUIRED)\n\n  * **email** *string* (REQUIRED)\n  Email of the user.\n\n  * **phoneNumber** *string*\n  Phone number of the user in E.164 format. We recommend using a library such as [libphonenumber](https://github.com/google/libphonenumber) to parse and validate phone numbers.\n\n  * **sessionId** *string* (REQUIRED)\n  Hash of the session identifier; typically of the end user. This helps us make risk decisions and prevent fraud. IMPORTANT: Please hash the session identifier to prevent sending us actual session identifiers.\n\n\n  * **ipAddress** *string* (REQUIRED)\n  Single IPv4 or IPv6 address of user'\n\n**amount** *object* (REQUIRED)\n\n  * **amount** *string* (REQUIRED)\n  Magnitude of the amount, in units of the currency, with a `.`.\n\n  * **currency** *string* (REQUIRED)\n  Currency code.\n\n**autoCapture** *boolean*\nTriggers the automatic capture of the full payment amount. If set to false the payment will only be authorized but not captured.\n\n**verification** *string* (REQUIRED)\nIndicates the verification method for this payment.\n\n**verificationSuccessUrl** *string*\nThe URL to redirect users to after successful 3DS authentication.\n\n**verificationFailureUrl** *string*\nThe URL to redirect users to after failed 3DS authentication.\n\n**source** *object* (REQUIRED)\n\n  * **id** *string*\n  Unique system generated identifier for the entity.\n\n  * **type** *string*\n  Type of the source.\n\n**description** *string*\nDescription of the payment with length restriction of 240 characters.\n\n**encryptedData** *string*\nPGP encrypted base64 encoded string. Contains CVV.\n* **CVV (Card Verification Number)**: Three or four digit security code. Only required if `verification` is `cvv`.\n\n\n**channel** *string*\nThe channel identifier that can be set for the payment. When not provided, the default channel is used.\n\n"
            },
            "url": {
              "path": [
                "v1",
                "payments"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"idempotencyKey\": \"{{$guid}}\",\n  \"amount\": {\n    \"amount\": \"3.14\",\n    \"currency\": \"USD\"\n  },\n  \"verification\": \"cvv\",\n  \"source\": {\n    \"id\": \"b8627ae8-732b-4d25-b947-1df8f4007a29\",\n    \"type\": \"ach\"\n  },\n  \"metadata\": {\n    \"email\": \"satoshi@circle.com\",\n    \"sessionId\": \"DE6FA86F60BB47B379307F851E238617\",\n    \"ipAddress\": \"244.28.239.130\",\n    \"phoneNumber\": \"/+2675593/\"\n  },\n  \"keyId\": \"72daad98-8b55-96b2-27a6-6e52ab60fd62\",\n  \"autoCapture\": true,\n  \"verificationSuccessUrl\": \"https://www.example.com/3ds/verificationsuccessful\",\n  \"verificationFailureUrl\": \"https://www.example.com/3ds/verificationfailure\",\n  \"description\": \"Payment\",\n  \"encryptedData\": \"UHVibGljS2V5QmFzZTY0RW5jb2RlZA==\",\n  \"channel\": \"ba943ff1-ca16-49b2-ba55-1057e70ca5c7\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "id": "b49b9691-fa00-4563-9a67-ce5dc1fdbdef",
              "name": "Card, CVV Verification",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n     \"idempotencyKey\": \"{{$guid}}\",\n     \"keyId\": \"key1\",\n     \"metadata\": {\n          \"email\": \"satoshi@circle.com\",\n          \"phoneNumber\": \"+14155555555\",\n          \"sessionId\": \"DE6FA86F60BB47B379307F851E238617\",\n          \"ipAddress\": \"244.28.239.130\"\n     },\n     \"amount\": {\n          \"amount\": \"3.14\",\n          \"currency\": \"USD\"\n     },\n     \"verification\": \"cvv\",\n     \"source\": {\n          \"id\": \"36ae460a-e1ff-4d34-8e92-5cefff47e482\",\n          \"type\": \"card\"\n     },\n     \"description\": \"Payment\",\n     \"encryptedData\": \"UHVibGljS2V5QmFzZTY0RW5jb2RlZA==\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/v1/payments",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "v1",
                    "payments"
                  ]
                }
              },
              "_postman_previewlanguage": "Text",
              "header": [],
              "cookie": [],
              "responseTime": null,
              "body": ""
            },
            {
              "id": "8a907816-9c59-4a18-a8f0-2e7ce8d0761e",
              "name": "Card, 3DS Verification",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n     \"idempotencyKey\": \"{{$guid}}\",\n     \"metadata\": {\n          \"email\": \"satoshi@circle.com\",\n          \"phoneNumber\": \"+14155555555\",\n          \"sessionId\": \"DE6FA86F60BB47B379307F851E238617\",\n          \"ipAddress\": \"244.28.239.130\"\n     },\n     \"amount\": {\n          \"amount\": \"3.14\",\n          \"currency\": \"USD\"\n     },\n     \"verification\": \"three_d_secure\",\n     \"verificationSuccessUrl\": \"https://www.example.com/3ds/verificationsuccessful\",\n     \"verificationFailureUrl\": \"https://www.example.com/3ds/verificationfailure\",\n     \"source\": {\n          \"id\": \"36ae460a-e1ff-4d34-8e92-5cefff47e482\",\n          \"type\": \"card\"\n     },\n     \"description\": \"Payment\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/v1/payments",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "v1",
                    "payments"
                  ]
                }
              },
              "_postman_previewlanguage": "Text",
              "header": [],
              "cookie": [],
              "responseTime": null,
              "body": ""
            },
            {
              "id": "593ef67b-1d70-49bb-8295-76ae1bad0f42",
              "name": "Card, No Verification",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n     \"idempotencyKey\": \"{{$guid}}\",\n     \"keyId\": \"key1\",\n     \"metadata\": {\n          \"email\": \"satoshi@circle.com\",\n          \"phoneNumber\": \"+14155555555\",\n          \"sessionId\": \"DE6FA86F60BB47B379307F851E238617\",\n          \"ipAddress\": \"244.28.239.130\"\n     },\n     \"amount\": {\n          \"amount\": \"3.14\",\n          \"currency\": \"USD\"\n     },\n     \"verification\": \"none\",\n     \"source\": {\n          \"id\": \"36ae460a-e1ff-4d34-8e92-5cefff47e482\",\n          \"type\": \"card\"\n     },\n     \"description\": \"Payment\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/v1/payments",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "v1",
                    "payments"
                  ]
                }
              },
              "_postman_previewlanguage": "Text",
              "header": [],
              "cookie": [],
              "responseTime": null,
              "body": ""
            },
            {
              "id": "0654bf3f-2f59-4c47-b146-6e1db9babd61",
              "name": "ACH",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n     \"idempotencyKey\": \"{{$guid}}\",\n     \"metadata\": {\n          \"email\": \"satoshi@circle.com\",\n          \"phoneNumber\": \"+14155555555\",\n          \"sessionId\": \"DE6FA86F60BB47B379307F851E238617\",\n          \"ipAddress\": \"244.28.239.130\"\n     },\n     \"amount\": {\n          \"amount\": \"7.19\",\n          \"currency\": \"USD\"\n     },\n     \"source\": {\n          \"id\": \"645c7957-c48f-4d09-9926-7e499314f42f\",\n          \"type\": \"ach\"\n     },\n     \"description\": \"Payment\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/v1/payments",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "v1",
                    "payments"
                  ]
                }
              },
              "_postman_previewlanguage": "Text",
              "header": [],
              "cookie": [],
              "responseTime": null,
              "body": ""
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "635a10e6-dd3e-4766-a1e8-40fd699fc745",
          "name": "List all payments",
          "request": {
            "name": "List all payments",
            "description": {},
            "url": {
              "path": [
                "v1",
                "payments"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "source",
                  "value": "b3d9d2d5-4c12-4946-a09d-953e82fae2b0",
                  "description": "Universally unique identifier (UUID v4) for the source. Filters results to fetch only payments made from the provdided source."
                },
                {
                  "disabled": true,
                  "key": "settlementId",
                  "value": "b48c8962-8e9f-40c3-9f1d-d9adde2ffe61",
                  "description": "Queries items with the specified settlement id. Matches any settlement id if unspecified."
                },
                {
                  "disabled": true,
                  "key": "paymentIntentId",
                  "value": "b48c8962-8e9f-40c3-9f1d-d9adde2ffe61",
                  "description": "Queries items with the specified payment intent id."
                },
                {
                  "disabled": true,
                  "key": "type",
                  "value": "card",
                  "description": "Source account type. Filters the results to fetch all payments made from a specified account type. Matches any source type if unspecified."
                },
                {
                  "disabled": true,
                  "key": "type",
                  "value": "ach",
                  "description": "Source account type. Filters the results to fetch all payments made from a specified account type. Matches any source type if unspecified."
                },
                {
                  "disabled": true,
                  "key": "status",
                  "value": "action_required",
                  "description": "Queries items with the specified status. Matches any status if unspecified."
                },
                {
                  "disabled": true,
                  "key": "from",
                  "value": "2020-04-10T02:13:30.000Z",
                  "description": "Queries items created since the specified date-time (inclusive)."
                },
                {
                  "disabled": true,
                  "key": "to",
                  "value": "2020-04-10T02:13:30.000Z",
                  "description": "Queries items created before the specified date-time (inclusive)."
                },
                {
                  "disabled": true,
                  "key": "pageBefore",
                  "value": "consequat nulla dolor ea",
                  "description": "A collection ID value used for pagination.\n\nIt marks the exclusive end of a page. When provided, the collection resource will return the next `n` items before\nthe id, with `n` being specified by `pageSize`.\n\nThe items will be returned in the natural order of the collection.\n\nThe resource will return the first page if neither `pageAfter` nor `pageBefore` are specified.\n\nSHOULD NOT be used in conjuction with pageAfter.\n"
                },
                {
                  "disabled": true,
                  "key": "pageAfter",
                  "value": "consequat nulla dolor ea",
                  "description": "A collection ID value used for pagination.\n\nIt marks the exclusive begin of a page. When provided, the collection resource will return the next `n` items after\nthe id, with `n` being specified by `pageSize`.\n\nThe items will be returned in the natural order of the collection.\n\nThe resource will return the first page if neither `pageAfter` nor `pageBefore` are specified.\n\nSHOULD NOT be used in conjuction with pageBefore.\n"
                },
                {
                  "disabled": true,
                  "key": "pageSize",
                  "value": "5",
                  "description": "Limits the number of items to be returned.\n\nSome collections have a strict upper bound that will disregard this value. In case the specified value is higher\nthan the allowed limit, the collection limit will be used.\n\nIf avoided, the collection will determine the page size itself.\n"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "86e52322-1626-4d65-b47c-72ec482a62bd",
          "name": "Get a payment",
          "request": {
            "name": "Get a payment",
            "description": {},
            "url": {
              "path": [
                "v1",
                "payments",
                ":id"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "b3d9d2d5-4c12-4946-a09d-953e82fae2b0",
                  "key": "id",
                  "description": "(Required) Universally unique identifier (UUID v4) of a resource."
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "64db17bf-d727-4ac7-bffe-046194503b9e",
          "name": "Capture a payment (BETA)",
          "request": {
            "name": "Capture a payment (BETA)",
            "description": {
              "content": "Warning: Please contact Circle support if you are planning on using this feature.\n\nThe given amount will be captured for the authorized payment if possible. If no amount is specified, the full amount\nwill be captured. You can only capture once per authorization.\n\nA successful response does *not* mean the payment has been captured. It only means the capture request was successfully submitted.\n\n#### Body Params\n\n**idempotencyKey** *string* (REQUIRED)\nUniversally unique identifier (UUID v4) idempotency key. This key is utilized to ensure exactly-once execution of mutating requests.\n\n**amount** *object*\n\n  * **amount** *string* (REQUIRED)\n  Magnitude of the amount, in units of the currency, with a `.`.\n\n  * **currency** *string* (REQUIRED)\n  Currency code.\n\n",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "v1",
                "payments",
                ":id",
                "capture"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "b3d9d2d5-4c12-4946-a09d-953e82fae2b0",
                  "key": "id",
                  "description": "(Required) Universally unique identifier (UUID v4) of a resource."
                }
              ]
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"idempotencyKey\": \"{{$guid}}\",\n  \"amount\": {\n    \"amount\": \"3.14\",\n    \"currency\": \"USD\"\n  }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "d0fdf792-c600-4210-adbe-f393201732d5",
          "name": "Cancel a payment",
          "request": {
            "name": "Cancel a payment",
            "description": {
              "content": "The payment will be voided if possible meaning the payment source will not be charged & the payment will never settle.\nOtherwise, the payment will be refunded meaning the payment source will be charged & the payment will be refunded from deductions of future settlements.\nNot all payments are eligible to be cancelled.\n\nA successful response does *not* mean the payment has been cancelled; it only means the cancellation request is successfully submitted.\n\n#### Body Params\n\n**idempotencyKey** *string* (REQUIRED)\nUniversally unique identifier (UUID v4) idempotency key. This key is utilized to ensure exactly-once execution of mutating requests.\n\n**reason** *string*\nEnumerated reason for a returned payment. Providing this reason in the request is recommended (to improve risk evaluation) but not required.\n\n",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "v1",
                "payments",
                ":id",
                "cancel"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "b3d9d2d5-4c12-4946-a09d-953e82fae2b0",
                  "key": "id",
                  "description": "(Required) Universally unique identifier (UUID v4) of a resource."
                }
              ]
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"idempotencyKey\": \"{{$guid}}\",\n  \"reason\": \"invalid_ach_rtn\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "b125d74a-eada-4e78-844f-46bd46fbf61f",
          "name": "Refund a payment",
          "request": {
            "name": "Refund a payment",
            "description": {
              "content": "The payment source will be refunded if possible. Not all payments are eligible to be cancelled.\n\nA successful response does *not* mean the payment has been refunded; it only means the refund request is successfully submitted.\n\n#### Body Params\n\n**idempotencyKey** *string* (REQUIRED)\nUniversally unique identifier (UUID v4) idempotency key. This key is utilized to ensure exactly-once execution of mutating requests.\n\n**amount** *object* (REQUIRED)\n\n  * **amount** *string* (REQUIRED)\n  Magnitude of the amount, in units of the currency, with a `.`.\n\n  * **currency** *string* (REQUIRED)\n  Currency code.\n\n**reason** *string*\nEnumerated reason for a returned payment. Providing this reason in the request is recommended (to improve risk evaluation) but not required.\n\n",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "v1",
                "payments",
                ":id",
                "refund"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "b3d9d2d5-4c12-4946-a09d-953e82fae2b0",
                  "key": "id",
                  "description": "(Required) Universally unique identifier (UUID v4) of a resource."
                }
              ]
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"idempotencyKey\": \"{{$guid}}\",\n  \"amount\": {\n    \"amount\": \"3.14\",\n    \"currency\": \"USD\"\n  },\n  \"reason\": \"payment_stopped_by_issuer\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "7c225b18-4096-4050-b10b-557b2d4e6a31",
          "name": "Create a mock Wire payment",
          "request": {
            "name": "Create a mock Wire payment",
            "description": {
              "content": "In the sandbox environment, initiate a mock wire payment that mimics the behavior of funds sent through the bank (wire) account linked to master wallet.\n#### Body Params\n\n**trackingRef** *string* (REQUIRED)\nWire tracking reference that needs to be set in the wire reference to beneficiary field. This field is retrievable through the response during wire creation or via the bank instruction endpoint.\n\n**amount** *object* (REQUIRED)\n\n  * **amount** *string* (REQUIRED)\n  Magnitude of the amount, in units of the currency, with a `.`.\n\n  * **currency** *string* (REQUIRED)\n  Currency code.\n\n**beneficiaryBank** *object* (REQUIRED)\n\n  * **accountNumber** *string* (REQUIRED)\n  Virtual account number or Circle corporate Silvergate Wire account number that needs to be set as destination.\n\n",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "v1",
                "mocks",
                "payments",
                "wire"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"trackingRef\": \"CIR13FB13A\",\n  \"amount\": {\n    \"amount\": \"3.14\",\n    \"currency\": \"USD\"\n  },\n  \"beneficiaryBank\": {\n    \"accountNumber\": \"11111111\"\n  }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "69bb6c64-143d-4cf5-88df-a0608424a363",
          "name": "Create a mock SEPA payment",
          "request": {
            "name": "Create a mock SEPA payment",
            "description": {
              "content": "In the sandbox environment, initiate a mock SEPA payment that mimics the behavior of funds sent through the bank (SEPA) account linked to master wallet.\n#### Body Params\n\n**trackingRef** *string* (REQUIRED)\nSEPA tracking reference that needs to be set in the payment details or description.\n\n**amount** *object* (REQUIRED)\n\n  * **amount** *string* (REQUIRED)\n  Magnitude of the amount, in units of the currency, with a `.`.\n\n  * **currency** *string* (REQUIRED)\n  Currency code.\n\n",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "v1",
                "mocks",
                "payments",
                "sepa"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"trackingRef\": \"CIR13FB13A\",\n  \"amount\": {\n    \"amount\": 3.14,\n    \"currency\": \"EUR\"\n  }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "b1fddbc6-682d-4ade-8d31-619eed59782b",
      "name": "Crypto Payment Intents",
      "description": {
        "content": "Create and track intent for end user to pay via crypto.",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "9cb54a94-6db2-4195-a64c-977b4602bac1",
          "name": "Create a payment intent",
          "request": {
            "name": "Create a payment intent",
            "description": {
              "content": "\n#### Body Params\n\n**idempotencyKey** *string* (REQUIRED)\nUniversally unique identifier (UUID v4) idempotency key. This key is utilized to ensure exactly-once execution of mutating requests.\n\n**amount** *object* (REQUIRED)\n\n  * **amount** *string* (REQUIRED)\n  Magnitude of the amount, in units of the currency, with a `.`.\n\n  * **currency** *string* (REQUIRED)\n  Currency code.\n\n**settlementCurrency** *string* (REQUIRED)\nDesired currency for the payments to settle in.\n\n**paymentMethods** *array* (REQUIRED)\n\n"
            },
            "url": {
              "path": [
                "v1",
                "paymentIntents"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"idempotencyKey\": \"{{$guid}}\",\n  \"amount\": {\n    \"amount\": \"3.14\",\n    \"currency\": \"ETH\"\n  },\n  \"settlementCurrency\": \"ETH\",\n  \"paymentMethods\": [\n    {\n      \"type\": \"blockchain\",\n      \"chain\": \"FLOW\",\n      \"address\": \"0x8381470ED67C3802402dbbFa0058E8871F017A6F\"\n    },\n    {\n      \"type\": \"blockchain\",\n      \"chain\": \"ALGO\",\n      \"address\": \"0x8381470ED67C3802402dbbFa0058E8871F017A6F\"\n    }\n  ]\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "51356f95-a3a7-488e-9661-a7c369d28dd5",
          "name": "List all payment intents",
          "request": {
            "name": "List all payment intents",
            "description": {},
            "url": {
              "path": [
                "v1",
                "paymentIntents"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "status",
                  "value": "expired",
                  "description": "Filters by the most recent `timeline.status` within the payment intent."
                },
                {
                  "disabled": true,
                  "key": "context",
                  "value": "underpaid",
                  "description": "Filters by the most recent `timeline.context` within the payment intent."
                },
                {
                  "disabled": true,
                  "key": "from",
                  "value": "2020-04-10T02:13:30.000Z",
                  "description": "Queries items created since the specified date-time (inclusive)."
                },
                {
                  "disabled": true,
                  "key": "to",
                  "value": "2020-04-10T02:13:30.000Z",
                  "description": "Queries items created before the specified date-time (inclusive)."
                },
                {
                  "disabled": true,
                  "key": "pageBefore",
                  "value": "consequat nulla dolor ea",
                  "description": "A collection ID value used for pagination.\n\nIt marks the exclusive end of a page. When provided, the collection resource will return the next `n` items before\nthe id, with `n` being specified by `pageSize`.\n\nThe items will be returned in the natural order of the collection.\n\nThe resource will return the first page if neither `pageAfter` nor `pageBefore` are specified.\n\nSHOULD NOT be used in conjuction with pageAfter.\n"
                },
                {
                  "disabled": true,
                  "key": "pageAfter",
                  "value": "consequat nulla dolor ea",
                  "description": "A collection ID value used for pagination.\n\nIt marks the exclusive begin of a page. When provided, the collection resource will return the next `n` items after\nthe id, with `n` being specified by `pageSize`.\n\nThe items will be returned in the natural order of the collection.\n\nThe resource will return the first page if neither `pageAfter` nor `pageBefore` are specified.\n\nSHOULD NOT be used in conjuction with pageBefore.\n"
                },
                {
                  "disabled": true,
                  "key": "pageSize",
                  "value": "5",
                  "description": "Limits the number of items to be returned.\n\nSome collections have a strict upper bound that will disregard this value. In case the specified value is higher\nthan the allowed limit, the collection limit will be used.\n\nIf avoided, the collection will determine the page size itself.\n"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "9b4ffdea-0c8e-461a-ab8b-0dd6f0d50160",
          "name": "Get a payment intent",
          "request": {
            "name": "Get a payment intent",
            "description": {},
            "url": {
              "path": [
                "v1",
                "paymentIntents",
                ":id"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "b3d9d2d5-4c12-4946-a09d-953e82fae2b0",
                  "key": "id",
                  "description": "(Required) Universally unique identifier (UUID v4) of a resource."
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "b3eeba31-2212-463b-a6c3-1fadf7adeda6",
          "name": "Expire a payment intent",
          "request": {
            "name": "Expire a payment intent",
            "description": {
              "content": "\n#### Body Params\n\n"
            },
            "url": {
              "path": [
                "v1",
                "paymentIntents",
                ":id",
                "expire"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "b3d9d2d5-4c12-4946-a09d-953e82fae2b0",
                  "key": "id",
                  "description": "(Required) Universally unique identifier (UUID v4) of a resource."
                }
              ]
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "9386030b-5ac7-446b-ab81-c2cad340104c",
          "name": "Refund a payment intent",
          "request": {
            "name": "Refund a payment intent",
            "description": {
              "content": "\n#### Body Params\n\n**idempotencyKey** *string* (REQUIRED)\nUniversally unique identifier (UUID v4) idempotency key. This key is utilized to ensure exactly-once execution of mutating requests.\n\n**destination** *object* (REQUIRED)\nThe destination of a crypto refund.\n\n  * **address** *string* (REQUIRED)\n  The blockchain address.\n\n  * **chain** *string* (REQUIRED)\n  A blockchain that a given currency is available on.\n\n**amount** (REQUIRED)\nThe source amount of the refund, it can be in either the original payment currency or the settlement currency.\n\n  * **currency** *string* (REQUIRED)\n  Currency code.\n\n**toAmount** (REQUIRED)\nThe destination amount of the refund, it must be in the original payment currency.\n\n  * **amount** *string* (REQUIRED)\n  Magnitude of the amount, in units of the currency, with a `.`.\n\n  * **currency** *string* (REQUIRED)\n  Currency code.\n\n"
            },
            "url": {
              "path": [
                "v1",
                "paymentIntents",
                ":id",
                "refund"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "b3d9d2d5-4c12-4946-a09d-953e82fae2b0",
                  "key": "id",
                  "description": "(Required) Universally unique identifier (UUID v4) of a resource."
                }
              ]
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"idempotencyKey\": \"{{$guid}}\",\n  \"destination\": {\n    \"address\": \"0x8381470ED67C3802402dbbFa0058E8871F017A6F\",\n    \"chain\": \"HBAR\"\n  },\n  \"amount\": {\n    \"currency\": \"ETH\"\n  },\n  \"toAmount\": {\n    \"amount\": \"3.14\",\n    \"currency\": \"USD\"\n  }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "a435e5cc-3e97-41c1-9af3-8be9c7670d82",
      "name": "Cards",
      "description": {
        "content": "Link, update, and get information on debit/credit cards.",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "45aecd65-dea5-4d2d-ac10-a65707784c3a",
          "name": "Create a card",
          "request": {
            "name": "Create a card",
            "description": {
              "content": "\n#### Body Params\n\n**idempotencyKey** *string* (REQUIRED)\nUniversally unique identifier (UUID v4) idempotency key. This key is utilized to ensure exactly-once execution of mutating requests.\n\n**keyId** *string*\nUniversally unique identifier (UUID v4) of the public key used in encryption. NOTE the sandbox environment uses the default value of `key1`. For this reason the example supplied is `key1` rather than a UUID.\n\n**encryptedData** *string* (REQUIRED)\nPGP encrypted base64 encoded string. Contains Number and CVV.\n* **Number**: Card number. No spaces or other separators. REQUIRED\n* **CVV (Card Verification Number)**: Three or four digit security code. REQUIRED'\n\n\n**billingDetails** *object* (REQUIRED)\n\n  * **name** *string* (REQUIRED)\n  Full name of the card or bank account holder.\n\n  * **city** *string* (REQUIRED)\n  City portion of the address.\n\n  * **country** *string* (REQUIRED)\n  Country portion of the address. Formatted as a two-letter country code specified in ISO 3166-1 alpha-2.\n\n  * **line1** *string* (REQUIRED)\n  Line one of the street address.\n\n  * **line2** *string*\n  Line two of the street address.\n\n  * **district** *string*\n  State / County / Province / Region portion of the address. If the country is US or Canada, then district is required and should use the two-letter code for the subdivision.\n\n  * **postalCode** *string* (REQUIRED)\n  Postal / ZIP code of the address.\n\n**expMonth** *integer* (REQUIRED)\nTwo digit number representing the card's expiration month.\n\n**expYear** *integer* (REQUIRED)\nFour digit number representing the card's expiration year.\n\n**metadata** *object* (REQUIRED)\n\n  * **email** *string* (REQUIRED)\n  Email of the user.\n\n  * **phoneNumber** *string*\n  Phone number of the user in E.164 format. We recommend using a library such as [libphonenumber](https://github.com/google/libphonenumber) to parse and validate phone numbers.\n\n  * **sessionId** *string* (REQUIRED)\n  Hash of the session identifier; typically of the end user. This helps us make risk decisions and prevent fraud. IMPORTANT: Please hash the session identifier to prevent sending us actual session identifiers.\n\n\n  * **ipAddress** *string* (REQUIRED)\n  Single IPv4 or IPv6 address of user'\n\n"
            },
            "url": {
              "path": [
                "v1",
                "cards"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"idempotencyKey\": \"{{$guid}}\",\n  \"expMonth\": 1,\n  \"expYear\": 2020,\n  \"encryptedData\": \"LS0tLS1CRUdJTiBQR1AgTUVTU0FHRS0tLS0tCgp3Y0JNQTBYV1NGbEZScFZoQVFmL2J2bVVkNG5LZ3dkbExKVTlEdEFEK0p5c0VOTUxuOUlRUWVGWnZJUWEKMGgzQklpRFNRU0RMZmI0NEs2SXZMeTZRbm54bmFLcWx0MjNUSmtPd2hGWFIrdnNSMU5IbnVHN0lUNWJECmZzeVdleXlNK1JLNUVHV0thZ3NmQ2tWamh2NGloY29xUnlTTGtJbWVmRzVaR0tMRkJTTTBsTFNPWFRURQpiMy91eU1zMVJNb3ZiclNvbXkxa3BybzUveWxabWVtV2ZsU1pWQlhNcTc1dGc1YjVSRVIraXM5ckc0cS8KMXl0M0FOYXA3UDhKekFhZVlyTnVNZGhGZFhvK0NFMC9CQnN3L0NIZXdhTDk4SmRVUEV0NjA5WFRHTG9kCjZtamY0YUtMQ01xd0RFMkNVb3dPdE8vMzVIMitnVDZKS3FoMmtjQUQyaXFlb3luNWcralRHaFNyd3NKWgpIdEphQWVZZXpGQUVOaFo3Q01IOGNsdnhZVWNORnJuNXlMRXVGTkwwZkczZy95S3loclhxQ0o3UFo5b3UKMFVxQjkzQURKWDlJZjRBeVQ2bU9MZm9wUytpT2lLall4bG1NLzhlVWc3OGp1OVJ5T1BXelhyTzdLWTNHClFSWm8KPXc1dEYKLS0tLS1FTkQgUEdQIE1FU1NBR0UtLS0tLQo\",\n  \"billingDetails\": {\n    \"name\": \"Satoshi Nakamoto\",\n    \"city\": \"Boston\",\n    \"country\": \"US\",\n    \"line1\": \"100 Money Street\",\n    \"postalCode\": \"01234\",\n    \"line2\": \"Suite 1\",\n    \"district\": \"MA\"\n  },\n  \"metadata\": {\n    \"email\": \"satoshi@circle.com\",\n    \"sessionId\": \"DE6FA86F60BB47B379307F851E238617\",\n    \"ipAddress\": \"244.28.239.130\",\n    \"phoneNumber\": \"/11896/\"\n  },\n  \"keyId\": \"urn:uuid:6eedca2e-1697-f0e0-ec39-614b08f0ee1e\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "da9a78e6-c5f2-43d1-8711-b5aa54d894f6",
          "name": "List all cards",
          "request": {
            "name": "List all cards",
            "description": {},
            "url": {
              "path": [
                "v1",
                "cards"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "pageBefore",
                  "value": "consequat nulla dolor ea",
                  "description": "A collection ID value used for pagination.\n\nIt marks the exclusive end of a page. When provided, the collection resource will return the next `n` items before\nthe id, with `n` being specified by `pageSize`.\n\nThe items will be returned in the natural order of the collection.\n\nThe resource will return the first page if neither `pageAfter` nor `pageBefore` are specified.\n\nSHOULD NOT be used in conjuction with pageAfter.\n"
                },
                {
                  "disabled": true,
                  "key": "pageAfter",
                  "value": "consequat nulla dolor ea",
                  "description": "A collection ID value used for pagination.\n\nIt marks the exclusive begin of a page. When provided, the collection resource will return the next `n` items after\nthe id, with `n` being specified by `pageSize`.\n\nThe items will be returned in the natural order of the collection.\n\nThe resource will return the first page if neither `pageAfter` nor `pageBefore` are specified.\n\nSHOULD NOT be used in conjuction with pageBefore.\n"
                },
                {
                  "disabled": true,
                  "key": "pageSize",
                  "value": "5",
                  "description": "Limits the number of items to be returned.\n\nSome collections have a strict upper bound that will disregard this value. In case the specified value is higher\nthan the allowed limit, the collection limit will be used.\n\nIf avoided, the collection will determine the page size itself.\n"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "509c34f7-3df1-4d2f-84d4-6d16777be912",
          "name": "Get a card",
          "request": {
            "name": "Get a card",
            "description": {},
            "url": {
              "path": [
                "v1",
                "cards",
                ":id"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "b3d9d2d5-4c12-4946-a09d-953e82fae2b0",
                  "key": "id",
                  "description": "(Required) Universally unique identifier (UUID v4) of a resource."
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "dd09b4c9-041e-4177-ac22-edb5c0eb27ff",
          "name": "Update a card",
          "request": {
            "name": "Update a card",
            "description": {
              "content": "\n#### Body Params\n\n**keyId** *string* (REQUIRED)\nUniversally unique identifier (UUID v4) of the public key used in encryption. NOTE the sandbox environment uses the default value of `key1`. For this reason the example supplied is `key1` rather than a UUID.\n\n**encryptedData** *string* (REQUIRED)\nPGP encrypted base64 encoded string. Contains CVV.\n* **CVV (Card Verification Number)**: Three or four digit security code. REQUIRED'\n\n\n**expMonth** *integer* (REQUIRED)\nTwo digit number representing the card's expiration month.\n\n**expYear** *integer* (REQUIRED)\nFour digit number representing the card's expiration year.\n\n"
            },
            "url": {
              "path": [
                "v1",
                "cards",
                ":id"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "b3d9d2d5-4c12-4946-a09d-953e82fae2b0",
                  "key": "id",
                  "description": "(Required) Universally unique identifier (UUID v4) of a resource."
                }
              ]
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"keyId\": \"108ac376-e3ef-4523-366c-eb8e4ae0ddc4\",\n  \"encryptedData\": \"UHVibGljS2V5QmFzZTY0RW5jb2RlZA==\",\n  \"expMonth\": 1,\n  \"expYear\": 2020\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "3346ca46-c595-4a61-9de8-4a4e3ddcbb05",
      "name": "Payment Tokens",
      "description": {
        "content": "Create Apple Pay and Google Pay payment tokens.",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "73ef26ff-23d3-4757-a79f-9c891a954600",
          "name": "Create a payment token",
          "request": {
            "name": "Create a payment token",
            "description": {
              "content": "Convert a digital wallet (Apple Pay, Google Pay) token to a single-use payment token.\n#### Body Params\n\n**idempotencyKey** *string* (REQUIRED)\nUniversally unique identifier (UUID v4) idempotency key. This key is utilized to ensure exactly-once execution of mutating requests.\n\n**type** *string* (REQUIRED)\nType of the digital wallet token.\n\n**tokenData** (REQUIRED)\nThe token data\n  Option 1\n\n  * **version** *string* (REQUIRED)\n  ApplePay token version information.\n\n  * **data** *string* (REQUIRED)\n  Encrypted payment data. Base64 encoded as a string.\n\n  * **signature** *string* (REQUIRED)\n  Signature of the payment and header data. The signature includes the signing certificate, its intermediate CA certificate, and information about the signing algorithm.\n\n  * **header** (REQUIRED)\n  Additional version-dependent information used to decrypt and verify the payment.\n    Option 1\n\n    * **applicationData** *string*\n    Optional. Hash of the applicationData property of the original PKPaymentRequest object. If the value of that property is null, this key is omitted.\n\n    * **ephemeralPublicKey** *string* (REQUIRED)\n    Ephemeral public key bytes.\n\n    * **publicKeyHash** *string* (REQUIRED)\n    Hash of the X.509 encoded public key bytes of the merchant\u2019s certificate.\n\n    * **transactionId** *string* (REQUIRED)\n    Transaction identifier, generated on the device.\n\n\n    Option 2\n\n    * **applicationData** *string*\n    Optional. Hash of the applicationData property of the original PKPaymentRequest object. If the value of that property is null, this key is omitted.\n\n    * **wrappedKey** *string* (REQUIRED)\n    The symmetric key wrapped using your RSA public key.\n\n    * **publicKeyHash** *string* (REQUIRED)\n    Hash of the X.509 encoded public key bytes of the merchant\u2019s certificate.\n\n    * **transactionId** *string* (REQUIRED)\n    Transaction identifier, generated on the device.\n\n\n\n  Option 2\n\n  * **signature** *string* (REQUIRED)\n  Verifies the message came from Google. The signature is created using ECDSA.\n\n  * **protocolVersion** *string* (REQUIRED)\n  Identifies which encryption/signing scheme created this message. In this way, the protocol can evolve over time if needed. If it is not set, assume ECv0.\n\n  * **signedMessage** *string* (REQUIRED)\n  A serialized JSON string containing the encryptedMessage, ephemeralPublicKey, and tag. To simplify the signature verification process, this value is serialized.\n\n\n",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "v1",
                "paymentTokens"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"idempotencyKey\": \"{{$guid}}\",\n  \"type\": \"applepay\",\n  \"tokenData\": {\n    \"version\": \"EC_v1\",\n    \"data\": \"t7GeajLB9skXB6QSWfEpPA4WPhDqB7ekdd+...T6Ms7PhiNZpuGEE2QE=\",\n    \"signature\": \"MIAGCSqGSIb3DQEHAqCAMIACAQEx.../WIDkHWiFuSm5a3NVox7DlyIf0AAAAAAAA=\",\n    \"header\": {\n      \"ephemeralPublicKey\": \"MFkwEwYHKoZIzj.../zlsw==\",\n      \"publicKeyHash\": \"tqYV+tmG9aMh+l/K6cicUnPqkb1gUiLjSTM9gEz6Nl0=\",\n      \"transactionId\": \"3cee89679130a4b2617c76118a1c62fd400cd45b49dc0916d5b951b560cd17b4\",\n      \"applicationData\": \"\"\n    }\n  }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "56632157-6c0a-473b-951d-8571d8de18bc",
      "name": "Wires",
      "description": {
        "content": "Create, get instructions, and get information on bank accounts for wire transfers.",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "4160dd77-4aef-4dc8-a853-1756380823c7",
          "name": "Create a Wire bank account",
          "request": {
            "name": "Create a Wire bank account",
            "description": {
              "content": "\n#### Body Params\n\nOption 1\n\n**idempotencyKey** *string* (REQUIRED)\nUniversally unique identifier (UUID v4) idempotency key. This key is utilized to ensure exactly-once execution of mutating requests.\n\n**accountNumber** *string* (REQUIRED)\nAccount number that identifies the bank account.\n\n**routingNumber** *string* (REQUIRED)\nABA routing number for the bank account. Note this has to be specific for bank wire transfers.\n\n**billingDetails** *object* (REQUIRED)\n\n  * **name** *string* (REQUIRED)\n  Full name of the card or bank account holder.\n\n  * **city** *string* (REQUIRED)\n  City portion of the address.\n\n  * **country** *string* (REQUIRED)\n  Country portion of the address. Formatted as a two-letter country code specified in ISO 3166-1 alpha-2.\n\n  * **line1** *string* (REQUIRED)\n  Line one of the street address.\n\n  * **line2** *string*\n  Line two of the street address.\n\n  * **district** *string*\n  State / County / Province / Region portion of the address. If the country is US or Canada, then district is required and should use the two-letter code for the subdivision.\n\n  * **postalCode** *string* (REQUIRED)\n  Postal / ZIP code of the address.\n\n**bankAddress** *object* (REQUIRED)\nThe address details for the bank, as provided during bank account creation.\n\n  * **bankName** *string*\n  Name of the bank. This property is required for bank accounts outside of the US that do not support IBAN'\n\n  * **city** *string*\n  City portion of the address. This property is required for bank accounts outside of the US.\n\n  * **country** *string* (REQUIRED)\n  Country portion of the address. Formatted as a two-letter country code specified in ISO 3166-1 alpha-2.\n\n  * **line1** *string*\n  Line one of the street address.\n\n  * **line2** *string*\n  Line two of the street address.\n\n  * **district** *string*\n  State / County / Province / Region portion of the address. US and Canada use the two-letter code for the subdivision.\n\n\nOption 2\n\n**idempotencyKey** *string* (REQUIRED)\nUniversally unique identifier (UUID v4) idempotency key. This key is utilized to ensure exactly-once execution of mutating requests.\n\n**iban** *string* (REQUIRED)\nInternational Bank Account Number (IBAN) for the bank account.\n\n**billingDetails** *object* (REQUIRED)\n\n  * **name** *string* (REQUIRED)\n  Full name of the card or bank account holder.\n\n  * **city** *string* (REQUIRED)\n  City portion of the address.\n\n  * **country** *string* (REQUIRED)\n  Country portion of the address. Formatted as a two-letter country code specified in ISO 3166-1 alpha-2.\n\n  * **line1** *string* (REQUIRED)\n  Line one of the street address.\n\n  * **line2** *string*\n  Line two of the street address.\n\n  * **district** *string*\n  State / County / Province / Region portion of the address. If the country is US or Canada, then district is required and should use the two-letter code for the subdivision.\n\n  * **postalCode** *string* (REQUIRED)\n  Postal / ZIP code of the address.\n\n**bankAddress** *object* (REQUIRED)\nThe address of the bank. City and country fields are required.\n\n  * **bankName** *string*\n  Name of the bank. This property is required for bank accounts outside of the US that do not support IBAN'\n\n  * **city** *string* (REQUIRED)\n  City portion of the address. This property is required for bank accounts outside of the US.\n\n  * **country** *string* (REQUIRED)\n  Country portion of the address. Formatted as a two-letter country code specified in ISO 3166-1 alpha-2.\n\n  * **line1** *string*\n  Line one of the street address.\n\n  * **line2** *string*\n  Line two of the street address.\n\n  * **district** *string*\n  State / County / Province / Region portion of the address. US and Canada use the two-letter code for the subdivision.\n\n\nOption 3\n\n**idempotencyKey** *string* (REQUIRED)\nUniversally unique identifier (UUID v4) idempotency key. This key is utilized to ensure exactly-once execution of mutating requests.\n\n**accountNumber** *string* (REQUIRED)\nAccount number that identifies the bank account.\n\n**routingNumber** *string* (REQUIRED)\nThe bank's SWIFT / BIC code.\n\n**billingDetails** *object* (REQUIRED)\n\n  * **name** *string* (REQUIRED)\n  Full name of the card or bank account holder.\n\n  * **city** *string* (REQUIRED)\n  City portion of the address.\n\n  * **country** *string* (REQUIRED)\n  Country portion of the address. Formatted as a two-letter country code specified in ISO 3166-1 alpha-2.\n\n  * **line1** *string* (REQUIRED)\n  Line one of the street address.\n\n  * **line2** *string*\n  Line two of the street address.\n\n  * **district** *string*\n  State / County / Province / Region portion of the address. If the country is US or Canada, then district is required and should use the two-letter code for the subdivision.\n\n  * **postalCode** *string* (REQUIRED)\n  Postal / ZIP code of the address.\n\n**bankAddress** *object* (REQUIRED)\nThe address of the bank. BankName, City and Country fields are required.\n\n  * **bankName** *string* (REQUIRED)\n  Name of the bank. This property is required for bank accounts outside of the US that do not support IBAN'\n\n  * **city** *string* (REQUIRED)\n  City portion of the address. This property is required for bank accounts outside of the US.\n\n  * **country** *string* (REQUIRED)\n  Country portion of the address. Formatted as a two-letter country code specified in ISO 3166-1 alpha-2.\n\n  * **line1** *string*\n  Line one of the street address.\n\n  * **line2** *string*\n  Line two of the street address.\n\n  * **district** *string*\n  State / County / Province / Region portion of the address. US and Canada use the two-letter code for the subdivision.\n\n\n"
            },
            "url": {
              "path": [
                "v1",
                "banks",
                "wires"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"idempotencyKey\": \"{{$guid}}\",\n  \"accountNumber\": \"12340010\",\n  \"routingNumber\": \"121000248\",\n  \"billingDetails\": {\n    \"name\": \"Satoshi Nakamoto\",\n    \"city\": \"Boston\",\n    \"country\": \"US\",\n    \"line1\": \"100 Money Street\",\n    \"postalCode\": \"01234\",\n    \"line2\": \"Suite 1\",\n    \"district\": \"MA\"\n  },\n  \"bankAddress\": {\n    \"country\": \"US\",\n    \"bankName\": \"SAN FRANCISCO\",\n    \"city\": \"SAN FRANCISCO\",\n    \"line1\": \"100 Money Street\",\n    \"line2\": \"Suite 1\",\n    \"district\": \"CA\"\n  }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "id": "fcdf9d46-aa45-47fe-9a28-0ca7335eaabc",
              "name": "U.S.",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n     \"idempotencyKey\": \"{{$guid}}\",\n     \"accountNumber\": \"12340010\",\n     \"routingNumber\": \"121000248\",\n     \"billingDetails\": {\n          \"name\": \"Satoshi Nakamoto\",\n          \"city\": \"Boston\",\n          \"country\": \"US\",\n          \"line1\": \"100 Money Street\",\n          \"line2\": \"Suite 1\",\n          \"district\": \"MA\",\n          \"postalCode\": \"01234\"\n     },\n     \"bankAddress\": {\n          \"country\": \"US\"\n     }\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/v1/banks/wires",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "v1",
                    "banks",
                    "wires"
                  ]
                }
              },
              "_postman_previewlanguage": "Text",
              "header": [],
              "cookie": [],
              "responseTime": null,
              "body": ""
            },
            {
              "id": "3827401b-d5b9-46af-8690-cd8f0b781122",
              "name": "Non-U.S. Non-IBAN",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n     \"idempotencyKey\": \"{{$guid}}\",\n     \"accountNumber\": \"002010077777777771\",\n     \"routingNumber\": \"BDEMMXMF\",\n     \"billingDetails\": {\n          \"name\": \"Satoshi Nakamoto\",\n          \"city\": \"Boston\",\n          \"country\": \"US\",\n          \"line1\": \"100 Money Street\",\n          \"line2\": \"Suite 1\",\n          \"district\": \"MA\",\n          \"postalCode\": \"01234\"\n     },\n     \"bankAddress\": {\n          \"bankName\": \"Banco Nacional de M\u00e9xico\",\n          \"city\": \"M\u00e9xico DF\",\n          \"country\": \"MX\"\n     }\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/v1/banks/wires",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "v1",
                    "banks",
                    "wires"
                  ]
                }
              },
              "_postman_previewlanguage": "Text",
              "header": [],
              "cookie": [],
              "responseTime": null,
              "body": ""
            },
            {
              "id": "48525343-9265-497d-bd6c-f3ec2f5cc803",
              "name": "Non-U.S. IBAN",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n     \"idempotencyKey\": \"{{$guid}}\",\n     \"iban\": \"DE31100400480532013000\",\n     \"billingDetails\": {\n          \"name\": \"Satoshi Nakamoto\",\n          \"city\": \"Boston\",\n          \"country\": \"US\",\n          \"line1\": \"100 Money Street\",\n          \"line2\": \"Suite 1\",\n          \"district\": \"MA\",\n          \"postalCode\": \"01234\"\n     },\n     \"bankAddress\": {\n          \"city\": \"Kassel\",\n          \"country\": \"DE\"\n     }\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/v1/banks/wires",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "v1",
                    "banks",
                    "wires"
                  ]
                }
              },
              "_postman_previewlanguage": "Text",
              "header": [],
              "cookie": [],
              "responseTime": null,
              "body": ""
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "fa8dd07c-7ba2-49af-8d85-990690c4defb",
          "name": "Get a Wire bank account",
          "request": {
            "name": "Get a Wire bank account",
            "description": {},
            "url": {
              "path": [
                "v1",
                "banks",
                "wires",
                ":id"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "b3d9d2d5-4c12-4946-a09d-953e82fae2b0",
                  "key": "id",
                  "description": "(Required) Universally unique identifier (UUID v4) of a resource."
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "0eee4340-854d-4c97-9cf6-35164dc0fc92",
          "name": "Get Wire instructions",
          "request": {
            "name": "Get Wire instructions",
            "description": {
              "content": "Get the wire transfer instructions into the Circle bank account given your bank account id",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "v1",
                "banks",
                "wires",
                ":id",
                "instructions"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "b3d9d2d5-4c12-4946-a09d-953e82fae2b0",
                  "key": "id",
                  "description": "(Required) Universally unique identifier (UUID v4) of a resource."
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "330a4996-ba15-435b-bb8e-b1c7c01bc161",
      "name": "ACH",
      "description": {
        "content": "Link and get information on bank account for ACH payments.",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "5de5c6b5-c630-4c4f-8253-898f719992b1",
          "name": "Create a ACH bank account",
          "request": {
            "name": "Create a ACH bank account",
            "description": {
              "content": "\n#### Body Params\n\n**idempotencyKey** *string* (REQUIRED)\nUniversally unique identifier (UUID v4) idempotency key. This key is utilized to ensure exactly-once execution of mutating requests.\n\n**plaidProcessorToken** *string* (REQUIRED)\nThe token for the ACH account provided by the processor (Plaid).\n\n**billingDetails** *object* (REQUIRED)\nBilling details of the account holder.\n\n  * **name** *string* (REQUIRED)\n  Full name of the card or bank account holder.\n\n  * **city** *string*\n  City portion of the address.\n\n  * **country** *string*\n  Country portion of the address. Formatted as a two-letter country code specified in ISO 3166-1 alpha-2.\n\n  * **line1** *string*\n  Line one of the street address.\n\n  * **line2** *string*\n  Line two of the street address.\n\n  * **district** *string*\n  State / County / Province / Region portion of the address. If the country is US or Canada, then district is required and should use the two-letter code for the subdivision.\n\n  * **postalCode** *string*\n  Postal / ZIP code of the address.\n\n**bankAccountType** *string*\nRetail account (individual consumer account) or Business account (e.g. sole prop, LLC, corporation).\n\n**metadata** *object* (REQUIRED)\n\n  * **email** *string* (REQUIRED)\n  Email of the user.\n\n  * **phoneNumber** *string*\n  Phone number of the user in E.164 format. We recommend using a library such as [libphonenumber](https://github.com/google/libphonenumber) to parse and validate phone numbers.\n\n  * **sessionId** *string* (REQUIRED)\n  Hash of the session identifier; typically of the end user. This helps us make risk decisions and prevent fraud. IMPORTANT: Please hash the session identifier to prevent sending us actual session identifiers.\n\n\n  * **ipAddress** *string* (REQUIRED)\n  Single IPv4 or IPv6 address of user'\n\n"
            },
            "url": {
              "path": [
                "v1",
                "banks",
                "ach"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"idempotencyKey\": \"{{$guid}}\",\n  \"plaidProcessorToken\": \"processor-sandbox-circle-82cf95bb-43f8-4191-8d30-2c9f42853621\",\n  \"billingDetails\": {\n    \"name\": \"Satoshi Nakamoto\",\n    \"city\": \"Boston\",\n    \"country\": \"US\",\n    \"line1\": \"100 Money Street\",\n    \"line2\": \"Suite 1\",\n    \"district\": \"MA\",\n    \"postalCode\": \"01234\"\n  },\n  \"metadata\": {\n    \"email\": \"satoshi@circle.com\",\n    \"sessionId\": \"DE6FA86F60BB47B379307F851E238617\",\n    \"ipAddress\": \"244.28.239.130\",\n    \"phoneNumber\": \"/220750715519123\"\n  },\n  \"bankAccountType\": \"retail\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "72fe1c6c-3f16-440a-8c78-1b2d4be24014",
          "name": "Get a ACH bank account",
          "request": {
            "name": "Get a ACH bank account",
            "description": {},
            "url": {
              "path": [
                "v1",
                "banks",
                "ach",
                ":id"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "b3d9d2d5-4c12-4946-a09d-953e82fae2b0",
                  "key": "id",
                  "description": "(Required) Universally unique identifier (UUID v4) of a resource."
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "148a51b4-914d-4eda-bed8-306d3d0ee581",
          "name": "Create a mock ACH bank account",
          "request": {
            "name": "Create a mock ACH bank account",
            "description": {
              "content": "In the sandbox environment, create a mock ACH account and retrieve a processor token that can be used to link an ACH account.\n#### Body Params\n\n**account** *object* (REQUIRED)\n\n  * **accountNumber** *string* (REQUIRED)\n  The account number of the ACH account.\n\n  * **routingNumber** *string* (REQUIRED)\n  The routing number of the ACH account.\n\nFor sandbox testing, valid routing numbers include `011000028`, `011201762`, `011500120`, `021214862`, `121000248`, `121140399`, `211073473`, `221172610`, and `011000138`.\n\n\n  * **description** *string* (REQUIRED)\n  A description for the ACH account.\n\n**balance** *object* (REQUIRED)\n\n  * **amount** *string* (REQUIRED)\n  Magnitude of the amount, in units of the currency, with a `.`.\n\n  * **currency** *string* (REQUIRED)\n  Currency code.\n\n",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "v1",
                "mocks",
                "ach",
                "accounts"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"account\": {\n    \"accountNumber\": \"123456789\",\n    \"routingNumber\": \"011000028\",\n    \"description\": \"My ACH account\"\n  },\n  \"balance\": {\n    \"amount\": \"3.14\",\n    \"currency\": \"USD\"\n  }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "4c4aa9aa-611e-4cba-9a24-39fccfa347f5",
      "name": "SEPA",
      "description": {
        "content": "Create and get information on SEPA accounts.",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "1e76db56-6dd2-477f-8645-9c7865df85e3",
          "name": "Create a SEPA bank account (BETA)",
          "request": {
            "name": "Create a SEPA bank account (BETA)",
            "description": {
              "content": "\n#### Body Params\n\n**idempotencyKey** *string* (REQUIRED)\nUniversally unique identifier (UUID v4) idempotency key. This key is utilized to ensure exactly-once execution of mutating requests.\n\n**iban** *string* (REQUIRED)\nInternational Bank Account Number (IBAN) for the bank account.\n\n**billingDetails** *object* (REQUIRED)\n\n  * **name** *string* (REQUIRED)\n  Full name of the card or bank account holder.\n\n  * **city** *string* (REQUIRED)\n  City portion of the address.\n\n  * **country** *string* (REQUIRED)\n  Country portion of the address. Formatted as a two-letter country code specified in ISO 3166-1 alpha-2.\n\n  * **line1** *string* (REQUIRED)\n  Line one of the street address.\n\n  * **line2** *string*\n  Line two of the street address.\n\n  * **district** *string*\n  State / County / Province / Region portion of the address. If the country is US or Canada, then district is required and should use the two-letter code for the subdivision.\n\n  * **postalCode** *string* (REQUIRED)\n  Postal / ZIP code of the address.\n\n"
            },
            "url": {
              "path": [
                "v1",
                "banks",
                "sepa"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"idempotencyKey\": \"{{$guid}}\",\n  \"iban\": \"DE31100400480532013000\",\n  \"billingDetails\": {\n    \"name\": \"Satoshi Nakamoto\",\n    \"city\": \"Boston\",\n    \"country\": \"US\",\n    \"line1\": \"100 Money Street\",\n    \"postalCode\": \"01234\",\n    \"line2\": \"Suite 1\",\n    \"district\": \"MA\"\n  },\n  \"accountName\": 23402670\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "a5f1ea0a-7ff6-4698-9eb4-f269bbe03725",
          "name": "Get a SEPA bank account (BETA)",
          "request": {
            "name": "Get a SEPA bank account (BETA)",
            "description": {},
            "url": {
              "path": [
                "v1",
                "banks",
                "sepa",
                ":id"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "b3d9d2d5-4c12-4946-a09d-953e82fae2b0",
                  "key": "id",
                  "description": "(Required) Universally unique identifier (UUID v4) of a resource."
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "e43d6201-184d-486f-ae76-dcbd79027782",
          "name": "Get SEPA instructions (BETA)",
          "request": {
            "name": "Get SEPA instructions (BETA)",
            "description": {
              "content": "Get the SEPA transfer instructions into the Circle bank account given your bank account id (BETA).",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "v1",
                "banks",
                "sepa",
                ":id",
                "instructions"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "b3d9d2d5-4c12-4946-a09d-953e82fae2b0",
                  "key": "id",
                  "description": "(Required) Universally unique identifier (UUID v4) of a resource."
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "47970f40-441c-468f-8232-a606018fd02d",
      "name": "Settlements",
      "description": {
        "content": "Get information on settlement batches.",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "b04fb34a-83d2-4241-b313-0ab497768aa7",
          "name": "List all settlements",
          "request": {
            "name": "List all settlements",
            "description": {},
            "url": {
              "path": [
                "v1",
                "settlements"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "from",
                  "value": "2020-04-10T02:13:30.000Z",
                  "description": "Queries items created since the specified date-time (inclusive)."
                },
                {
                  "disabled": true,
                  "key": "to",
                  "value": "2020-04-10T02:13:30.000Z",
                  "description": "Queries items created before the specified date-time (inclusive)."
                },
                {
                  "disabled": true,
                  "key": "pageBefore",
                  "value": "consequat nulla dolor ea",
                  "description": "A collection ID value used for pagination.\n\nIt marks the exclusive end of a page. When provided, the collection resource will return the next `n` items before\nthe id, with `n` being specified by `pageSize`.\n\nThe items will be returned in the natural order of the collection.\n\nThe resource will return the first page if neither `pageAfter` nor `pageBefore` are specified.\n\nSHOULD NOT be used in conjuction with pageAfter.\n"
                },
                {
                  "disabled": true,
                  "key": "pageAfter",
                  "value": "consequat nulla dolor ea",
                  "description": "A collection ID value used for pagination.\n\nIt marks the exclusive begin of a page. When provided, the collection resource will return the next `n` items after\nthe id, with `n` being specified by `pageSize`.\n\nThe items will be returned in the natural order of the collection.\n\nThe resource will return the first page if neither `pageAfter` nor `pageBefore` are specified.\n\nSHOULD NOT be used in conjuction with pageBefore.\n"
                },
                {
                  "disabled": true,
                  "key": "pageSize",
                  "value": "5",
                  "description": "Limits the number of items to be returned.\n\nSome collections have a strict upper bound that will disregard this value. In case the specified value is higher\nthan the allowed limit, the collection limit will be used.\n\nIf avoided, the collection will determine the page size itself.\n"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "f01200c9-7bbf-412d-acf1-e5774099bf39",
          "name": "Get a settlement",
          "request": {
            "name": "Get a settlement",
            "description": {},
            "url": {
              "path": [
                "v1",
                "settlements",
                ":id"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "b3d9d2d5-4c12-4946-a09d-953e82fae2b0",
                  "key": "id",
                  "description": "(Required) Universally unique identifier (UUID v4) of a resource."
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "6ef38825-8efb-417b-a7ea-c950ef7ddd16",
      "name": "Chargebacks",
      "description": {
        "content": "Get information on card chargebacks.",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "0d0dc7b5-ae92-454d-a90c-4bcd86ea603b",
          "name": "List all chargebacks",
          "request": {
            "name": "List all chargebacks",
            "description": {
              "content": "Retrieve list of chargebacks. Results will be sorted by create date descending: more recent chargebacks will be at the beginning of the list.\n",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "v1",
                "chargebacks"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "paymentId",
                  "value": "202ad9ce-974c-49ca-8d34-3afb7d7247ae",
                  "description": "The payment ID associated with the chargeback."
                },
                {
                  "disabled": true,
                  "key": "from",
                  "value": "2020-04-10T02:13:30.000Z",
                  "description": "Queries items created since the specified date-time (inclusive)."
                },
                {
                  "disabled": true,
                  "key": "to",
                  "value": "2020-04-10T02:13:30.000Z",
                  "description": "Queries items created before the specified date-time (inclusive)."
                },
                {
                  "disabled": true,
                  "key": "pageBefore",
                  "value": "consequat nulla dolor ea",
                  "description": "A collection ID value used for pagination.\n\nIt marks the exclusive end of a page. When provided, the collection resource will return the next `n` items before\nthe id, with `n` being specified by `pageSize`.\n\nThe items will be returned in the natural order of the collection.\n\nThe resource will return the first page if neither `pageAfter` nor `pageBefore` are specified.\n\nSHOULD NOT be used in conjuction with pageAfter.\n"
                },
                {
                  "disabled": true,
                  "key": "pageAfter",
                  "value": "consequat nulla dolor ea",
                  "description": "A collection ID value used for pagination.\n\nIt marks the exclusive begin of a page. When provided, the collection resource will return the next `n` items after\nthe id, with `n` being specified by `pageSize`.\n\nThe items will be returned in the natural order of the collection.\n\nThe resource will return the first page if neither `pageAfter` nor `pageBefore` are specified.\n\nSHOULD NOT be used in conjuction with pageBefore.\n"
                },
                {
                  "disabled": true,
                  "key": "pageSize",
                  "value": "5",
                  "description": "Limits the number of items to be returned.\n\nSome collections have a strict upper bound that will disregard this value. In case the specified value is higher\nthan the allowed limit, the collection limit will be used.\n\nIf avoided, the collection will determine the page size itself.\n"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "b550877e-646b-43c4-a53b-77125874b012",
          "name": "Get a chargeback",
          "request": {
            "name": "Get a chargeback",
            "description": {},
            "url": {
              "path": [
                "v1",
                "chargebacks",
                ":id"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "b3d9d2d5-4c12-4946-a09d-953e82fae2b0",
                  "key": "id",
                  "description": "(Required) Universally unique identifier (UUID v4) of a resource."
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "7a65e8c6-f6fa-47d3-be6e-6221f0202a92",
          "name": "Create a mock chargeback",
          "request": {
            "name": "Create a mock chargeback",
            "description": {
              "content": "In the sandbox environment, initiate a mock chargeback of a specified payment.  The entire payment will be charged back for its full value.  The payment must be in the `paid` state (otherwise the endpoint will return a `404`), and each payment can only be charged back once (otherwise the endpoint will return a `409`).  This endpoint is only available in the sandbox environment.\n#### Body Params\n\n**paymentId** *string* (REQUIRED)\nThe id of the payment to be charged back.  Each payment can only be charged back once.\n\n",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "v1",
                "mocks",
                "cards",
                "chargebacks"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"paymentId\": \"fc988ed5-c129-4f70-a064-e5beb7eb8e32\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "3498d8a5-f835-40cf-9010-9111f532c438",
      "name": "Reversals",
      "description": {
        "content": "Get information on ACH reversals.",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "a8d85a4a-bef4-4ff9-a8c9-b03adf52079b",
          "name": "List all ACH payment reversals.",
          "request": {
            "name": "List all ACH payment reversals.",
            "description": {
              "content": "Retrieve a list of ACH payment reversals. Results will be sorted by create date descending; more recent reversals will be at the beginning of the list",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "v1",
                "reversals"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "status",
                  "value": "action_required",
                  "description": "Queries items with the specified status. Matches any status if unspecified."
                },
                {
                  "disabled": true,
                  "key": "from",
                  "value": "2020-04-10T02:13:30.000Z",
                  "description": "Queries items created since the specified date-time (inclusive)."
                },
                {
                  "disabled": true,
                  "key": "to",
                  "value": "2020-04-10T02:13:30.000Z",
                  "description": "Queries items created before the specified date-time (inclusive)."
                },
                {
                  "disabled": true,
                  "key": "pageBefore",
                  "value": "consequat nulla dolor ea",
                  "description": "A collection ID value used for pagination.\n\nIt marks the exclusive end of a page. When provided, the collection resource will return the next `n` items before\nthe id, with `n` being specified by `pageSize`.\n\nThe items will be returned in the natural order of the collection.\n\nThe resource will return the first page if neither `pageAfter` nor `pageBefore` are specified.\n\nSHOULD NOT be used in conjuction with pageAfter.\n"
                },
                {
                  "disabled": true,
                  "key": "pageAfter",
                  "value": "consequat nulla dolor ea",
                  "description": "A collection ID value used for pagination.\n\nIt marks the exclusive begin of a page. When provided, the collection resource will return the next `n` items after\nthe id, with `n` being specified by `pageSize`.\n\nThe items will be returned in the natural order of the collection.\n\nThe resource will return the first page if neither `pageAfter` nor `pageBefore` are specified.\n\nSHOULD NOT be used in conjuction with pageBefore.\n"
                },
                {
                  "disabled": true,
                  "key": "pageSize",
                  "value": "5",
                  "description": "Limits the number of items to be returned.\n\nSome collections have a strict upper bound that will disregard this value. In case the specified value is higher\nthan the allowed limit, the collection limit will be used.\n\nIf avoided, the collection will determine the page size itself.\n"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "dbae9f02-d771-4b90-811c-4a4cdd54cd88",
      "name": "Balances",
      "description": {
        "content": "Get information on settled and unsettled balances.",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "112efff0-9dd0-4545-8e43-34a112cf0dfa",
          "name": "List all balances",
          "request": {
            "name": "List all balances",
            "description": {
              "content": "Retrieves the balance of merchant funds that have settled and also of funds that have been sent for processing but have not yet settled.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "v1",
                "balances"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "b0637b92-7b96-4fe8-b3bd-fe5eb1e505c9",
      "name": "Checkout Sessions",
      "description": {
        "content": "Create, get, extend a checkout session.",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "2a3deeb6-c168-492f-81aa-a2a1a59c5ed2",
          "name": "Create a checkout session",
          "request": {
            "name": "Create a checkout session",
            "description": {
              "content": "\n#### Body Params\n\n**successUrl** *string*\nThe URL returned to you through client-side callback when the payment is completed.\n\n**amount** *object* (REQUIRED)\n\n  * **amount** *string* (REQUIRED)\n  Magnitude of the amount, in units of the currency, with a `.`.\n\n  * **currency** *string* (REQUIRED)\n  A currency associated with a balance or address.\n\n"
            },
            "url": {
              "path": [
                "v1",
                "checkoutSessions"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"amount\": {\n    \"amount\": \"3.14\",\n    \"currency\": \"USD\"\n  },\n  \"successUrl\": \"https://www.example.com/success\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "d2ffa0f4-9808-4257-a383-89ffa1b0d18b",
          "name": "Get a checkout session",
          "request": {
            "name": "Get a checkout session",
            "description": {},
            "url": {
              "path": [
                "v1",
                "checkoutSessions",
                ":id"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "b3d9d2d5-4c12-4946-a09d-953e82fae2b0",
                  "key": "id",
                  "description": "(Required) Universally unique identifier (UUID v4) of a resource."
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "5f484812-4663-460d-8c05-3faca0659ba5",
          "name": "Extend a checkout session",
          "request": {
            "name": "Extend a checkout session",
            "description": {
              "content": "\n#### Body Params\n\n**extendTime** *integer*\nExtend the CheckoutSession by extendTime seconds if it is active or expired. The field is optional, if not provided, extend a period that configured by Merchant (default 1 day)\n\n"
            },
            "url": {
              "path": [
                "v1",
                "checkoutSessions",
                ":id",
                "extend"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "b3d9d2d5-4c12-4946-a09d-953e82fae2b0",
                  "key": "id",
                  "description": "(Required) Universally unique identifier (UUID v4) of a resource."
                }
              ]
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"extendTime\": 3600\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    }
  ],
  "event": [],
  "variable": [
    {
      "type": "string",
      "value": "https://api-sandbox.circle.com",
      "key": "baseUrl"
    },
    {
      "key": "apiKey",
      "value": "<your-api-key-here>",
      "type": "string"
    }
  ],
  "info": {
    "_postman_id": "7d6b364e-6303-4f0a-8759-3a73daffe696",
    "name": "Payments API",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": {
      "content": "The Circle Payments API allows you to take payments from your end users via traditional methods such as debit & credit cards, bank accounts (wires and ACH), etc., and receive settlement in USDC.\n\nThe Circle Payments API has been designed with any business or internet commerce in mind, not just crypto applications, and it's based on Circle's extensive experience processing millions of card payments since 2014.\n",
      "type": "text/plain"
    }
  },
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{apiKey}}",
        "type": "string"
      }
    ]
  }
}